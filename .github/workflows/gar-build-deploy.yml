name: Build & Push to GAR (no manual secrets) + Cloud Run

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read

env:
  # Defaults; PROJECT_ID is derived automatically from the JSON key in repo
  REGION: us-central1
  REPOSITORY: devyntra
  IMAGE_NAME: devyntra-web
  SERVICE_NAME: devyntra-web
  KEY_PATH: Devyntra-google-hack/devyntra-deploy-key.json

jobs:
  build_push_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install gcloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Authenticate with service account key from repo
        id: gcp-auth
        run: |
          test -f "$KEY_PATH" || { echo "Service account key not found at $KEY_PATH"; exit 1; }
          PROJECT_ID=$(cat "$KEY_PATH" | python -c 'import sys,json;print(json.load(sys.stdin)["project_id"])')
          echo "PROJECT_ID=$PROJECT_ID" >> $GITHUB_ENV
          gcloud auth activate-service-account --key-file="$KEY_PATH"
          gcloud config set project "$PROJECT_ID"

      - name: Enable required APIs (idempotent)
        run: |
          gcloud services enable \
            artifactregistry.googleapis.com \
            run.googleapis.com \
            cloudbuild.googleapis.com \
            --quiet

      - name: Ensure Artifact Registry repository exists (idempotent)
        run: |
          gcloud artifacts repositories describe "$REPOSITORY" --location="$REGION" >/dev/null 2>&1 \
            || gcloud artifacts repositories create "$REPOSITORY" \
                 --repository-format=docker \
                 --location="$REGION" \
                 --description="Devyntra images" \
                 --quiet

      - name: Build image with Cloud Buildpacks and push to GAR
        id: buildpack
        run: |
          IMAGE_PATH="$REGION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE_NAME:sha-${{ github.sha }}"
          echo "IMAGE_PATH=$IMAGE_PATH" >> $GITHUB_ENV
          gcloud builds submit --pack image="$IMAGE_PATH" --quiet

      - name: Deploy to Cloud Run from built image
        run: |
          gcloud run deploy "$SERVICE_NAME" \
            --image "$IMAGE_PATH" \
            --region "$REGION" \
            --platform managed \
            --allow-unauthenticated \
            --quiet


