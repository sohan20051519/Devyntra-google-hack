name: CI/CD - Build to GAR, Deploy Cloud Run + Firebase

on:
  push:
    branches:
      - master
      - main
  workflow_dispatch:

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GAR_LOCATION: ${{ secrets.GAR_LOCATION }} # e.g. us-central1 or asia-south1
  GAR_REPOSITORY: ${{ secrets.GAR_REPOSITORY }} # pre-created Artifact Registry repo name
  IMAGE_NAME: ${{ secrets.IMAGE_NAME }} # desired image name, e.g. web
  CLOUD_RUN_SERVICE: ${{ secrets.CLOUD_RUN_SERVICE }} # existing/desired service name
  CLOUD_RUN_REGION: ${{ secrets.CLOUD_RUN_REGION }} # e.g. us-central1

jobs:
  build-and-deploy:
    name: Build image -> GAR, Deploy
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Google Cloud Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          # Recommended: Workload Identity Federation
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}
          # Fallback to key if WIF is not configured
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: Ensure Artifact Registry repo variables
        run: |
          test -n "$GCP_PROJECT_ID" || { echo 'GCP_PROJECT_ID secret missing'; exit 1; }
          test -n "$GAR_LOCATION" || { echo 'GAR_LOCATION secret missing'; exit 1; }
          test -n "$GAR_REPOSITORY" || { echo 'GAR_REPOSITORY secret missing'; exit 1; }
          test -n "$IMAGE_NAME" || { echo 'IMAGE_NAME secret missing'; exit 1; }

      - name: Build app (frontend)
        working-directory: Devyntra-google-hack
        run: |
          npm ci
          npm run build || echo "No build script for root; continuing if frontend uses vite build via script"

      - name: Build image to GAR via Cloud Build
        run: |
          IMAGE_PATH="$GAR_LOCATION-docker.pkg.dev/$GCP_PROJECT_ID/$GAR_REPOSITORY/$IMAGE_NAME:sha-${{ github.sha }}"
          echo "Building and pushing: $IMAGE_PATH"
          gcloud builds submit --tag "$IMAGE_PATH" --project "$GCP_PROJECT_ID" --quiet
          echo "image_ref=$IMAGE_PATH" >> $GITHUB_OUTPUT

      - name: Deploy to Cloud Run
        if: env.CLOUD_RUN_SERVICE != ''
        run: |
          IMAGE_PATH="$GAR_LOCATION-docker.pkg.dev/$GCP_PROJECT_ID/$GAR_REPOSITORY/$IMAGE_NAME:sha-${{ github.sha }}"
          gcloud run deploy "$CLOUD_RUN_SERVICE" \
            --image "$IMAGE_PATH" \
            --region "$CLOUD_RUN_REGION" \
            --platform managed \
            --allow-unauthenticated \
            --project "$GCP_PROJECT_ID" --quiet

      - name: Install Firebase CLI
        run: npm i -g firebase-tools@13

      - name: Firebase deploy (Hosting + Functions)
        working-directory: Devyntra-google-hack
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ steps.auth.outputs.credentials_file_path }}
        run: |
          # If functions exists, install deps
          if [ -f functions/package.json ]; then \
            (cd functions && npm ci); \
          fi
          # Use ADC from auth step for firebase-tools
          firebase deploy --non-interactive --project "$GCP_PROJECT_ID"


